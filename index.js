export const hsv2hsl=(o,e,n,r=n-n*e/2,s=Math.min(r,1-r))=>[o,s?(n-r)/s:0,r],random=(o,e)=>(e||(e=o,o=0),Math.random()*(e-o)+o),pointOnCurve=(o,e,n,r,s=[0,0],a=[1,1])=>{const V=Math.PI/2,b=V/n;let t=0,h=0;if(o==="lam\xE9"){const p=e/n*V,u=2/(2+20*r),m=Math.cos(p),M=Math.sin(p);t=Math.sign(m)*Math.abs(m)**u,h=Math.sign(M)*Math.abs(M)**u}else o==="arc"?(h=Math.cos(-Math.PI/2+e*b+r),t=Math.sin(Math.PI/2+e*b-r)):o==="pow"?(t=Math.pow(1-e/n,1-r),h=Math.pow(e/n,1-r)):o==="powY"?(t=Math.pow(1-e/n,r),h=Math.pow(e/n,1-r)):o==="powX"&&(t=Math.pow(e/n,r),h=Math.pow(e/n,1-r));return t=s[0]+Math.min(Math.max(t,0),1)*(a[0]-s[0]),h=s[1]+Math.min(Math.max(h,0),1)*(a[1]-s[1]),[t,h]};export default function P({total:o=3,centerHue:e=0,hueCycle:n=.3,offsetTint:r=.1,offsetShade:s=.1,curveAccent:a=0,tintShadeHueShift:V=.1,curveMethod:b="arc",offsetCurveModTint:t=.03,offsetCurveModShade:h=.03,minSaturationLight:p=[0,0],maxSaturationLight:u=[1,1]}={}){const m=[],M=[],f=[];for(let l=1;l<o+1;l++){const[i,C]=pointOnCurve(b,l,o+1,a,p,u),c=(360+(-180*n+(e+l*(360/(o+1))*n)))%360,x=hsv2hsl(c,i,C);m.push(x);const[y,g]=pointOnCurve(b,l,o+1,a+t,p,u),w=hsv2hsl(c,y,g);M.push([(c+360*V)%360,w[1]-r,w[2]+r]);const[k,I]=pointOnCurve(b,l,o+1,a-h,p,u),d=hsv2hsl(c,k,I);f.push([(360+(c-360*V))%360,d[1]-s,d[2]-s])}return{light:M,dark:f,base:m,all:[...M,...m,...f]}}
